<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <title>JiangZifeng‘s Blog</title>
    <link href="https://jiangzfeng.github.io/blog/feed.xml" rel="self" />
    <link href="https://jiangzfeng.github.io/blog" />
    <updated>2024-06-24T23:22:13+08:00</updated>
    <author>
        <name>JiangZifeng</name>
    </author>
    <id>https://jiangzfeng.github.io/blog</id>

    <entry>
        <title>如何将xml转换为excel表格</title>
        <author>
            <name>JiangZifeng</name>
        </author>
        <link href="https://jiangzfeng.github.io/blog/ru-he-jiang-xmlzhuan-huan-wei-excelbiao-ge.html"/>
        <id>https://jiangzfeng.github.io/blog/ru-he-jiang-xmlzhuan-huan-wei-excelbiao-ge.html</id>
            <category term="Java"/>

        <updated>2024-06-24T22:46:26+08:00</updated>
            <summary></summary>
        <content></content>
    </entry>
    <entry>
        <title>Nacos 推空保护机制</title>
        <author>
            <name>JiangZifeng</name>
        </author>
        <link href="https://jiangzfeng.github.io/blog/nacos-tui-kong-bao-hu-ji-zhi.html"/>
        <id>https://jiangzfeng.github.io/blog/nacos-tui-kong-bao-hu-ji-zhi.html</id>
            <category term="Java"/>

        <updated>2024-06-24T22:45:29+08:00</updated>
            <summary></summary>
        <content></content>
    </entry>
    <entry>
        <title>Chaosblade 如何进行cpu故障注入</title>
        <author>
            <name>JiangZifeng</name>
        </author>
        <link href="https://jiangzfeng.github.io/blog/chaosblade-ru-he-jin-xing-cpugu-zhang-zhu-ru.html"/>
        <id>https://jiangzfeng.github.io/blog/chaosblade-ru-he-jin-xing-cpugu-zhang-zhu-ru.html</id>
            <category term="文章"/>
            <category term="chaosblade"/>

        <updated>2024-06-23T23:56:57+08:00</updated>
            <summary>
                <![CDATA[
                    引言 chaosblade是阿里开源的一款混沌演练工具，能够简便快捷地注入各种故障，包含丰富的场景。本文将以最简单的cpu故障注入场景为切入点，解析chaosblade 如何进行故障注入，并探讨在物理机和容器环境下进行cpu故障注入的区别。 如何对cpu注入故障？在chaosblade中这非常简单，只需要使用命令行工具blade，执行命令: blade create cpu fullload --percent 50 --cpu-count 2 --cpu-list 0,3 --timeout 100 这是chaosblade中一个经典的故障注入命令，该命令的结果是创建并执行一个cpu故障注入，该故障为对索引为0,3的cpu核心，注入50%的cpu负载，故障在100秒后恢复。 诚然我们可以通过命令行工具方便地注入故障，但是故障注入到底是如何产生的，其底层原理是什么？这引申出4个问题： 以下将从这4个问题解析chaosblade的cpu故障注入本质。 以下是一个简单地拉高cpu使用率的示例： func main(){ cpuCount := runtime.cpuNum() }
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <h1>引言</h1>
<p>chaosblade是阿里开源的一款混沌演练工具，能够简便快捷地注入各种故障，包含丰富的场景。本文将以最简单的cpu故障注入场景为切入点，解析chaosblade 如何进行故障注入，并探讨在物理机和容器环境下进行cpu故障注入的区别。</p>
<h1>如何对cpu进行故障注入</h1>
<p>如何对cpu注入故障？在chaosblade中这非常简单，只需要使用命令行工具blade，执行命令:</p>
<pre class="language-bash"><code>blade create cpu fullload --percent 50 --cpu-count 2 --cpu-list 0,3 --timeout 100</code></pre>
<p>这是chaosblade中一个经典的故障注入命令，该命令的结果是创建并执行一个cpu故障注入，该故障为对索引为0,3的cpu核心，注入50%的cpu负载，故障在100秒后恢复。</p>
<p>诚然我们可以通过命令行工具方便地注入故障，但是故障注入到底是如何产生的，其底层原理是什么？这引申出4个问题：</p>
<ol>
<li>如何注入cpu故障</li>
<li>如何指定故障cpu负载</li>
<li>如何对特定cpu核心注入故障</li>
<li>故障如何恢复</li>
</ol>
<p>以下将从这4个问题解析chaosblade的cpu故障注入本质。</p>
<h2>如何注入cpu故障</h2>
<p>以下是一个简单地拉高cpu使用率的示例：</p>
<pre class="language-go"><code>func main(){
 cpuCount := runtime.cpuNum()
}</code></pre>
            ]]>
        </content>
    </entry>
    <entry>
        <title>关于作者</title>
        <author>
            <name>JiangZifeng</name>
        </author>
        <link href="https://jiangzfeng.github.io/blog/guan-yu-zuo-zhe.html"/>
        <id>https://jiangzfeng.github.io/blog/guan-yu-zuo-zhe.html</id>
        <media:content url="https://jiangzfeng.github.io/blog/media/posts/2/IMG_20240405_162803.jpg" medium="image" />

        <updated>2024-06-23T23:28:06+08:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://jiangzfeng.github.io/blog/media/posts/2/IMG_20240405_162803.jpg" alt="" />
                    无名小卒
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://jiangzfeng.github.io/blog/media/posts/2/IMG_20240405_162803.jpg" class="type:primaryImage" alt="" /></p>
                <p>无名小卒</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>主页</title>
        <author>
            <name>JiangZifeng</name>
        </author>
        <link href="https://jiangzfeng.github.io/blog/zhu-ye.html"/>
        <id>https://jiangzfeng.github.io/blog/zhu-ye.html</id>

        <updated>2024-06-23T23:27:52+08:00</updated>
            <summary></summary>
        <content></content>
    </entry>
</feed>
